import org.apache.tools.ant.filters.ReplaceTokens

/*
 *  LICENSE
 * AdvancedPlHide
 * -------------
 * Copyright (C) 2021 - 2021 BlueTree242
 * -------------
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 *  END
 */
plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}
repositories {
    mavenCentral()
}
def buildNumber = project.properties['buildNumber'] == null ? "NONE" : project.properties['buildNumber']
System.out.println("Build Number is " + buildNumber)
def commit = project.properties['commit'] == null ? "NONE" : project.properties['commit']
System.out.println("Commit Hash is " + commit)
build.dependsOn shadowJar
subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'
    project.jar {
        archivesBaseName = 'AdvancedPlHide-' + project.name
    }
    dependencies {
        compileOnly 'org.jetbrains:annotations:16.0.2'
    }
    repositories {
        mavenCentral()
    }
    tasks.withType(Copy).all { duplicatesStrategy 'INCLUDE' }
    project.processResources {
        from(sourceSets.main.resources.srcDirs) {
            filter ReplaceTokens, tokens: [version    : version,
                                           build      : buildNumber,
                                           commit     : commit,
                                           description: project.description,
                                           buildDate  : System.currentTimeMillis() + ""
            ]
        }
    }
    java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(17))
        disableAutoTargetJvm()
    }
    compileJava {
        options.release.set(8)
    }
    build.dependsOn shadowJar
}
shadowJar {
    classifier ''
}

dependencies {
    implementation project(":spigot")
    implementation project(":velocity")
    implementation project(":bungee")
}
publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}





